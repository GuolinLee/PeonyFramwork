#*************************************************************************************************
#
# service.properties使用说明
#
# 所有的service不能重名
#
#
# 通过配置service运行的服务器，可以对功能进行纵向切分，不同服务器运行不同服务，不配置在此的service将在所有服务器运行。
# 【大部分service如果不进行调用性能消耗很少，我们只需要决定哪些服务必须在哪些服务器上运行即可】
#
# 配置service在哪些服务器上运行和运行规则。如果一个service不在本服务器上运行，那么对其调用将根据运行规则选取一个服务器调用
#
# 1、在哪些服务器上运行，配置运行该service的服务器id
#       多个配置用','隔开，可以有不同的配置方式：
#       1）直接配置：直接配置服务器id，如【1,2,3】
#       2）连续多个服务器：配置一个服务器id区间，如【1-3】
#       3）自定义哪些服务器：继承自ServiceRunOnServer
#       如果在123服务器上运行，则可以如下配置：【1,2,3】或【1-3】或【1,2-3】等
# 2、调用规则，即如何选择运行该服务的服务器
#       包括：
#       1）顺序调用【order】：先调用第一个，如果失败，则调用第二个，以此类推。容错
#       2）随机调用【random】：从配置的服务器中随机选出一个，调用，调用失败将重试。调用平均分布，负载平衡
#       3）取模调用【modulus】：根据自己服务器的id对配置该service的服务器个数取模i，调用第i个服务器。
#       4）自定义规则：继承自ServiceCallRule，根据id获取调用id
# 3、运行该服务的服务器是否使用调用规则：true使用，false不使用，调用自身
#
#***************************************************************************************************



# IdService：全局只能有一个IdService，确保id的唯一性
service.IdService.server = 1
service.IdService.callRule = order
service.IdService.selfUseRule = false
